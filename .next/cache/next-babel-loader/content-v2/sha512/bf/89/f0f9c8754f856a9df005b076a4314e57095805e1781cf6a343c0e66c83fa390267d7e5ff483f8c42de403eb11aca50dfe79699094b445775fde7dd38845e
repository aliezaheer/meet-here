{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\react-proj\\\\next-meetup-app\\\\pages\\\\index.js\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupList from \"../components/meetups/MeetupList\";\nconst DUMMY_MEETUPS = [{\n  id: \"m1\",\n  title: \"A First Meetup\",\n  image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\n  address: \"Some address 5, 12345 some city\",\n  description: \"This is a first meetup!\"\n}, {\n  id: \"m2\",\n  title: \"A Second Meetup\",\n  image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/f/fc/Frauenkirche_M%C3%BCnchen_abends.jpg/1280px-Frauenkirche_M%C3%BCnchen_abends.jpg\",\n  address: \"Some address 5, 12345 some city\",\n  description: \"This is a second meetup!\"\n}];\n\nconst HomePage = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 10\n  }, this);\n}; // **** These functions below only runs on server side not on client side *****\n///// gerServerSideProps() is a special fucntion in nextjs to get data for everyrequest from the client side to server\n// export async function gerServerSideProps(context) {\n//   const req = context.req; // request object with the key \"req\"\n//   const res = context.res; // responce object with the key \"res\"\n//   // fetch data from an API\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS,\n//     },\n//   };\n// }\n/////// getStaticProps() is a special function in nextjs to make SEO better by pre-rendring ////////\n\n\nexport async function getStaticProps() {\n  //fetch data from an API\n  // to establised on mongo cluster\n  const client = await MongoClient.connect(\"mongodb+srv://aliezaheer:rKMry7Zwx40bs9qd@cluster0.wn1kb.mongodb.net/meetups?retryWrites=true&w=majority\"); // db() method holds the data of database in our case meetups up in the link\n\n  const db = client.db(); // collection() method holds the multiple meetups data by collecting every single data\n\n  const meetupsCollection = db.collection(\"meetups\"); // find() method to find all the document in the collection database toArray() method to get array of document\n\n  const meetups = await meetupsCollection.find().toArray();\n  return {\n    props: {\n      meetups: meetups\n    },\n    // revalidate props to update and fetching data frequently from client to server\n    revalidate: 360 // 360 is representing the time of the fetching data in seconds\n\n  };\n}\nexport default HomePage;","map":{"version":3,"sources":["D:/react-proj/next-meetup-app/pages/index.js"],"names":["MongoClient","MeetupList","DUMMY_MEETUPS","id","title","image","address","description","HomePage","props","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","find","toArray","revalidate"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AAEA,OAAOC,UAAP,MAAuB,kCAAvB;AAEA,MAAMC,aAAa,GAAG,CACpB;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,gBAFT;AAGEC,EAAAA,KAAK,EACH,wHAJJ;AAKEC,EAAAA,OAAO,EAAE,iCALX;AAMEC,EAAAA,WAAW,EAAE;AANf,CADoB,EASpB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,iBAFT;AAGEC,EAAAA,KAAK,EACH,4IAJJ;AAKEC,EAAAA,OAAO,EAAE,iCALX;AAMEC,EAAAA,WAAW,EAAE;AANf,CAToB,CAAtB;;AAmBA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD,C,CAIA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAEA,OAAO,eAAeC,cAAf,GAAgC;AACrC;AACA;AACA,QAAMC,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CACnB,0GADmB,CAArB,CAHqC,CAOrC;;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX,CARqC,CAUrC;;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B,CAXqC,CAarC;;AACA,QAAMN,OAAO,GAAG,MAAMK,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB;AAEA,SAAO;AACLT,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAEA;AADJ,KADF;AAIL;AACAS,IAAAA,UAAU,EAAE,GALP,CAKY;;AALZ,GAAP;AAOD;AAED,eAAeX,QAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\r\n\r\nimport MeetupList from \"../components/meetups/MeetupList\";\r\n\r\nconst DUMMY_MEETUPS = [\r\n  {\r\n    id: \"m1\",\r\n    title: \"A First Meetup\",\r\n    image:\r\n      \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\r\n    address: \"Some address 5, 12345 some city\",\r\n    description: \"This is a first meetup!\",\r\n  },\r\n  {\r\n    id: \"m2\",\r\n    title: \"A Second Meetup\",\r\n    image:\r\n      \"https://upload.wikimedia.org/wikipedia/commons/thumb/f/fc/Frauenkirche_M%C3%BCnchen_abends.jpg/1280px-Frauenkirche_M%C3%BCnchen_abends.jpg\",\r\n    address: \"Some address 5, 12345 some city\",\r\n    description: \"This is a second meetup!\",\r\n  },\r\n];\r\n\r\nconst HomePage = (props) => {\r\n  return <MeetupList meetups={props.meetups} />;\r\n};\r\n\r\n// **** These functions below only runs on server side not on client side *****\r\n\r\n///// gerServerSideProps() is a special fucntion in nextjs to get data for everyrequest from the client side to server\r\n\r\n// export async function gerServerSideProps(context) {\r\n//   const req = context.req; // request object with the key \"req\"\r\n//   const res = context.res; // responce object with the key \"res\"\r\n\r\n//   // fetch data from an API\r\n//   return {\r\n//     props: {\r\n//       meetups: DUMMY_MEETUPS,\r\n//     },\r\n//   };\r\n// }\r\n\r\n/////// getStaticProps() is a special function in nextjs to make SEO better by pre-rendring ////////\r\n\r\nexport async function getStaticProps() {\r\n  //fetch data from an API\r\n  // to establised on mongo cluster\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://aliezaheer:rKMry7Zwx40bs9qd@cluster0.wn1kb.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  // db() method holds the data of database in our case meetups up in the link\r\n  const db = client.db();\r\n\r\n  // collection() method holds the multiple meetups data by collecting every single data\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  // find() method to find all the document in the collection database toArray() method to get array of document\r\n  const meetups = await meetupsCollection.find().toArray();\r\n\r\n  return {\r\n    props: {\r\n      meetups: meetups,\r\n    },\r\n    // revalidate props to update and fetching data frequently from client to server\r\n    revalidate: 360, // 360 is representing the time of the fetching data in seconds\r\n  };\r\n}\r\n\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}